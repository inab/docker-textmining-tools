Imports: {
  import gate.relations.RelationSet;
}
Phase:firstpass
Input: TREATMENT_RELATED_SENTENCE
Options: control = brill //1
//2
//3
Rule: tokenTransport
Priority: 20
(
{TREATMENT_RELATED_SENTENCE} 
): trfs
-->
{ 
  AnnotationSet YtagAS = (AnnotationSet) bindings.get("trfs");
  
  Annotation  treatmentRelatedFindingSentence   = YtagAS.iterator().next();
  
  FeatureMap additionalFeatures = Factory.newFeatureMap();   
  additionalFeatures.put("id_treatment_related_finding", 1);
  
  RelationSet relSet = inputAS.getRelations();  	
  
  // get trigger
  AnnotationSet triggers = inputAS.get("TREATMENT_RELATED_TRIGGER", YtagAS.firstNode().getOffset(), YtagAS.lastNode().getOffset());

  // get findings
  AnnotationSet findings = inputAS.get("FINDING", YtagAS.firstNode().getOffset(), YtagAS.lastNode().getOffset());	
  
  // get study test cd 
  //AnnotationSet tests = inputAS.get("STUDY_TESTCD", YtagAS.firstNode().getOffset(), YtagAS.lastNode().getOffset());
  
  // get specimen
  AnnotationSet specimens = inputAS.get("SPECIMEN", YtagAS.firstNode().getOffset(), YtagAS.lastNode().getOffset());
  
  
  int specimenId = -1;
  Annotation specimen = null;
  for (Annotation spec : specimens) {
     	specimen = spec;
     	specimen.getFeatures().putAll(additionalFeatures);	
     	specimenId = spec.getId();
  }
    
  
  for (Annotation trigger : triggers){
  		/*for (Annotation finding : findings) {
     		finding.getFeatures().putAll(additionalFeatures);	
     		//relSet.addRelation("trigger-finding", new int[] {treatmentRelatedFindingSentence.getId(), finding.getId(), specimenId }); 
     		relSet.addRelation("trigger-finding", new int[] {trigger.getId(), finding.getId()});
  		}*/
  		
  		/*for (Annotation test : tests) {
     		test.getFeatures().putAll(additionalFeatures);	
     		relSet.addRelation("trigger-testcd", new int[] {trigger.getId(), test.getId()});
  		}*/
  		
  }
  

  // create new annotation              
  FeatureMap featuresNewAnnotation = Factory.newFeatureMap();    
  featuresNewAnnotation.put("id", 1);                
  
  outputAS.add(XtagAS.firstNode(), XtagAS.lastNode(), "TREATMENT_RELATED_FINDING", featuresNewAnnotation);

}
